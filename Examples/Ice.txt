import bpy
mat = bpy.data.materials.new(name = "Ice")
mat.use_nodes = True
def ice_node_group():

    ice = bpy.data.node_groups.new(type = 'ShaderNodeTree', name = "Ice")
    
    bsdf_socket = ice.interface.new_socket(name = "BSDF", in_out='OUTPUT', socket_type = 'NodeSocketShader')
    bsdf_socket.attribute_domain = 'POINT'
    
    color_socket = ice.interface.new_socket(name = "Color", in_out='INPUT', socket_type = 'NodeSocketColor')
    color_socket.attribute_domain = 'POINT'
    
    roughness_socket = ice.interface.new_socket(name = "Roughness", in_out='INPUT', socket_type = 'NodeSocketFloat')
    roughness_socket.subtype = 'FACTOR'
    roughness_socket.default_value = 0.0
    roughness_socket.min_value = 0.0
    roughness_socket.max_value = 1.0
    roughness_socket.attribute_domain = 'POINT'
    
    inner_roughness_socket = ice.interface.new_socket(name = "Inner Roughness", in_out='INPUT', socket_type = 'NodeSocketFloat')
    inner_roughness_socket.subtype = 'FACTOR'
    inner_roughness_socket.default_value = 0.0
    inner_roughness_socket.min_value = 0.0
    inner_roughness_socket.max_value = 1.0
    inner_roughness_socket.attribute_domain = 'POINT'
    
    normal_socket = ice.interface.new_socket(name = "Normal", in_out='INPUT', socket_type = 'NodeSocketVector')
    normal_socket.subtype = 'NONE'
    normal_socket.default_value = (0.0, 0.0, 0.0)
    normal_socket.min_value = -3.403e+38
    normal_socket.max_value = 3.403e+38
    normal_socket.attribute_domain = 'POINT'
    normal_socket.hide_value = True
    
    
    principled_bsdf = ice.nodes.new("ShaderNodeBsdfPrincipled")
    principled_bsdf.name = "Principled BSDF"
    principled_bsdf.distribution = 'GGX'
    principled_bsdf.subsurface_method = 'RANDOM_WALK_SKIN'
    principled_bsdf.inputs[1].default_value = 0.0
    principled_bsdf.inputs[4].default_value = 1.0
    principled_bsdf.inputs[6].default_value = 0.0
    principled_bsdf.inputs[7].default_value = 0.0
    principled_bsdf.inputs[8].default_value = (1.0, 0.200, 0.100)
    principled_bsdf.inputs[9].default_value = 0.050
    principled_bsdf.inputs[10].default_value = 1.010
    principled_bsdf.inputs[11].default_value = 0.0
    principled_bsdf.inputs[12].default_value = 0.5
    principled_bsdf.inputs[14].default_value = 0.0
    principled_bsdf.inputs[15].default_value = 0.0
    principled_bsdf.inputs[16].default_value = (0.0, 0.0, 0.0)
    principled_bsdf.inputs[17].default_value = 1.0
    principled_bsdf.inputs[18].default_value = 0.0
    principled_bsdf.inputs[19].default_value = 0.030
    principled_bsdf.inputs[20].default_value = 1.5
    principled_bsdf.inputs[21].default_value = (1.0, 1.0, 1.0, 1.0)
    principled_bsdf.inputs[22].default_value = (0.0, 0.0, 0.0)
    principled_bsdf.inputs[23].default_value = 0.0
    principled_bsdf.inputs[24].default_value = 0.5
    principled_bsdf.inputs[25].default_value = (1.0, 1.0, 1.0, 1.0)
    principled_bsdf.inputs[26].default_value = (0.0, 0.0, 0.0, 1.0)
    principled_bsdf.inputs[27].default_value = 1.0
    
    group_output = ice.nodes.new("NodeGroupOutput")
    group_output.name = "Group Output"
    group_output.is_active_output = True
    
    group_input = ice.nodes.new("NodeGroupInput")
    group_input.name = "Group Input"
    
    mix = ice.nodes.new("ShaderNodeMix")
    mix.name = "Mix"
    mix.blend_type = 'MIX'
    mix.clamp_factor = True
    mix.clamp_result = False
    mix.data_type = 'RGBA'
    mix.factor_mode = 'UNIFORM'
    mix.inputs[0].default_value = 0.5
    mix.inputs[1].default_value = (0.5, 0.5, 0.5)
    mix.inputs[2].default_value = 0.0
    mix.inputs[3].default_value = 0.0
    mix.inputs[4].default_value = (0.0, 0.0, 0.0)
    mix.inputs[5].default_value = (0.0, 0.0, 0.0)
    mix.inputs[6].default_value = (1.0, 1.0, 1.0, 1.0)
    mix.inputs[8].default_value = (0.0, 0.0, 0.0)
    mix.inputs[9].default_value = (0.0, 0.0, 0.0)
    
    mix_001 = ice.nodes.new("ShaderNodeMix")
    mix_001.name = "Mix.001"
    mix_001.blend_type = 'MIX'
    mix_001.clamp_factor = True
    mix_001.clamp_result = False
    mix_001.data_type = 'RGBA'
    mix_001.factor_mode = 'UNIFORM'
    mix_001.inputs[0].default_value = 0.5
    mix_001.inputs[1].default_value = (0.5, 0.5, 0.5)
    mix_001.inputs[2].default_value = 0.0
    mix_001.inputs[3].default_value = 0.0
    mix_001.inputs[4].default_value = (0.0, 0.0, 0.0)
    mix_001.inputs[5].default_value = (0.0, 0.0, 0.0)
    mix_001.inputs[6].default_value = (1.0, 1.0, 1.0, 1.0)
    mix_001.inputs[8].default_value = (0.0, 0.0, 0.0)
    mix_001.inputs[9].default_value = (0.0, 0.0, 0.0)
    
    principled_bsdf_001 = ice.nodes.new("ShaderNodeBsdfPrincipled")
    principled_bsdf_001.name = "Principled BSDF.001"
    principled_bsdf_001.distribution = 'GGX'
    principled_bsdf_001.subsurface_method = 'RANDOM_WALK_SKIN'
    principled_bsdf_001.inputs[0].default_value = (0.680, 0.815, 1.0, 1.0)
    principled_bsdf_001.inputs[1].default_value = 0.0
    principled_bsdf_001.inputs[2].default_value = 0.0
    principled_bsdf_001.inputs[3].default_value = 1.450
    principled_bsdf_001.inputs[4].default_value = 1.0
    principled_bsdf_001.inputs[5].default_value = (0.0, 0.0, 0.0)
    principled_bsdf_001.inputs[6].default_value = 0.0
    principled_bsdf_001.inputs[7].default_value = 0.0
    principled_bsdf_001.inputs[8].default_value = (1.0, 0.200, 0.100)
    principled_bsdf_001.inputs[9].default_value = 0.050
    principled_bsdf_001.inputs[10].default_value = 1.0
    principled_bsdf_001.inputs[11].default_value = 0.0
    principled_bsdf_001.inputs[12].default_value = 0.5
    principled_bsdf_001.inputs[14].default_value = 0.0
    principled_bsdf_001.inputs[15].default_value = 0.0
    principled_bsdf_001.inputs[16].default_value = (0.0, 0.0, 0.0)
    principled_bsdf_001.inputs[17].default_value = 1.0
    principled_bsdf_001.inputs[18].default_value = 0.0
    principled_bsdf_001.inputs[19].default_value = 0.030
    principled_bsdf_001.inputs[20].default_value = 1.5
    principled_bsdf_001.inputs[21].default_value = (1.0, 1.0, 1.0, 1.0)
    principled_bsdf_001.inputs[22].default_value = (0.0, 0.0, 0.0)
    principled_bsdf_001.inputs[23].default_value = 0.0
    principled_bsdf_001.inputs[24].default_value = 0.5
    principled_bsdf_001.inputs[25].default_value = (1.0, 1.0, 1.0, 1.0)
    principled_bsdf_001.inputs[26].default_value = (0.0, 0.0, 0.0, 1.0)
    principled_bsdf_001.inputs[27].default_value = 1.0
    
    noise_texture = ice.nodes.new("ShaderNodeTexNoise")
    noise_texture.name = "Noise Texture"
    noise_texture.noise_dimensions = '3D'
    noise_texture.noise_type = 'FBM'
    noise_texture.normalize = True
    noise_texture.inputs[1].default_value = 0.0
    noise_texture.inputs[2].default_value = 1.0
    noise_texture.inputs[3].default_value = 15.0
    noise_texture.inputs[4].default_value = 0.600
    noise_texture.inputs[5].default_value = 2.0
    noise_texture.inputs[6].default_value = 0.0
    noise_texture.inputs[7].default_value = 1.0
    noise_texture.inputs[8].default_value = 0.0
    
    voronoi_texture = ice.nodes.new("ShaderNodeTexVoronoi")
    voronoi_texture.name = "Voronoi Texture"
    voronoi_texture.distance = 'EUCLIDEAN'
    voronoi_texture.feature = 'DISTANCE_TO_EDGE'
    voronoi_texture.normalize = False
    voronoi_texture.voronoi_dimensions = '3D'
    voronoi_texture.inputs[1].default_value = 0.0
    voronoi_texture.inputs[2].default_value = 4.0
    voronoi_texture.inputs[3].default_value = 0.0
    voronoi_texture.inputs[4].default_value = 0.5
    voronoi_texture.inputs[5].default_value = 2.0
    voronoi_texture.inputs[6].default_value = 1.0
    voronoi_texture.inputs[7].default_value = 0.260
    voronoi_texture.inputs[8].default_value = 1.0
    
    mapping = ice.nodes.new("ShaderNodeMapping")
    mapping.name = "Mapping"
    mapping.vector_type = 'POINT'
    mapping.inputs[1].default_value = (0.0, 0.0, 0.0)
    mapping.inputs[2].default_value = (0.0, 0.0, 0.0)
    mapping.inputs[3].default_value = (1.0, 1.0, 1.0)
    
    texture_coordinate = ice.nodes.new("ShaderNodeTexCoord")
    texture_coordinate.name = "Texture Coordinate"
    texture_coordinate.from_instancer = False
    
    mapping_001 = ice.nodes.new("ShaderNodeMapping")
    mapping_001.name = "Mapping.001"
    mapping_001.vector_type = 'POINT'
    mapping_001.inputs[1].default_value = (0.0, 0.0, 0.0)
    mapping_001.inputs[2].default_value = (0.0, 0.0, 0.0)
    mapping_001.inputs[3].default_value = (0.100, 1.0, 1.0)
    
    texture_coordinate_001 = ice.nodes.new("ShaderNodeTexCoord")
    texture_coordinate_001.name = "Texture Coordinate.001"
    texture_coordinate_001.from_instancer = False
    
    bump = ice.nodes.new("ShaderNodeBump")
    bump.name = "Bump"
    bump.invert = False
    bump.inputs[0].default_value = 0.300
    bump.inputs[1].default_value = 1.0
    bump.inputs[3].default_value = (0.0, 0.0, 0.0)
    
    bump_001 = ice.nodes.new("ShaderNodeBump")
    bump_001.name = "Bump.001"
    bump_001.invert = False
    bump_001.inputs[0].default_value = 0.020
    bump_001.inputs[1].default_value = 1.0
    bump_001.inputs[3].default_value = (0.0, 0.0, 0.0)
    
    
    
    
    ice.links.new(principled_bsdf.outputs[0], group_output.inputs[0])
    ice.links.new(group_input.outputs[0], principled_bsdf.inputs[0])
    ice.links.new(group_input.outputs[1], principled_bsdf.inputs[2])
    ice.links.new(group_input.outputs[2], principled_bsdf.inputs[3])
    ice.links.new(mapping.outputs[0], noise_texture.inputs[0])
    ice.links.new(noise_texture.outputs[0], bump.inputs[2])
    ice.links.new(texture_coordinate.outputs[3], mapping.inputs[0])
    ice.links.new(mapping_001.outputs[0], voronoi_texture.inputs[0])
    ice.links.new(texture_coordinate_001.outputs[3], mapping_001.inputs[0])
    ice.links.new(voronoi_texture.outputs[0], mix.inputs[7])
    ice.links.new(noise_texture.outputs[0], mix.inputs[6])
    ice.links.new(mix.outputs[2], bump_001.inputs[2])
    ice.links.new(mix_001.outputs[2], principled_bsdf_001.inputs[13])
    ice.links.new(mapping.outputs[0], mix_001.inputs[7])
    ice.links.new(group_input.outputs[0], mix_001.inputs[6])
    ice.links.new(texture_coordinate.outputs[3], mapping_001.inputs[0])
    ice.links.new(bump.outputs[0], principled_bsdf.inputs[5])
    ice.links.new(bump_001.outputs[0], bump.inputs[3])
    ice.links.new(group_input.outputs[3], bump_001.inputs[2])
    ice.links.new(principled_bsdf_001.outputs[0], group_output.inputs[1])
    return ice

ice = ice_node_group()

def ice_1_node_group():

    ice_1 = mat.node_tree
    for node in ice_1.nodes:
        ice_1.nodes.remove(node)
    
    material_output = ice_1.nodes.new("ShaderNodeOutputMaterial")
    material_output.name = "Material Output"
    material_output.is_active_output = True
    material_output.target = 'ALL'
    material_output.inputs[2].default_value = (0.0, 0.0, 0.0)
    material_output.inputs[3].default_value = 0.0
    
    ice_2 = ice_1.nodes.new("ShaderNodeGroup")
    ice_2.label = "Ice"
    ice_2.name = "Ice"
    ice_2.node_tree = ice
    ice_2.inputs[0].default_value = (0.815, 0.815, 1.0, 1.0)
    ice_2.inputs[1].default_value = 0.0
    ice_2.inputs[2].default_value = 0.0
    ice_2.inputs[3].default_value = (0.0, 0.0, 0.0)
    
    
    
    
    ice_1.links.new(ice_2.outputs[0], material_output.inputs[0])
    return ice_1

ice_1 = ice_1_node_group()
